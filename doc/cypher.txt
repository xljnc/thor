#####Cypher

##创建电影《精武英雄》
create (m:Movie {title:'精武英雄',tagline:'近代武打片教科书'})
create (m:Movie {title:'太极张三丰',tagline:'我命由我不由天'})


##更新电影《精武英雄》
match(m:Movie {title:'精武英雄'})
set m.released = 1994

##查询电影《精武英雄》
match(m:Movie {title:'精武英雄'}) return m

##创建演员
create (p:Person {name:'李连杰',birthday:'1990-01-02'})
create (p:Person {name:'周比利',birthday:'1991-01-02'})
create (p:Person {name:'仓田保昭',birthday:'1992-01-02'})
create (p {name:'中山忍',birthday:'1993-01-02'})
create (p:Person {name:'钱小豪',birthday:'1994-01-02'})
create (p:Person {name:'杨紫琼',birthday:'1995-01-02'})


##更新演员标签
match (p {name:'中山忍'})
set p:Person

##创建导演
create (p:Person {name:'陈嘉上',birthday:'1989-01-02'})

##创建演员和电影的参演关系
match (p:Person {name:'李连杰'}),(m:Movie {title:'精武英雄'})
create (p)-[r:ACTED_IN {role:'陈真'}]->(m)
match (p:Person {name:'周比利'}),(m:Movie {title:'精武英雄'})
create (p)-[r:ACTED_IN {role:'藤田刚'}]->(m)
match (p:Person {name:'仓田保昭'}),(m:Movie {title:'精武英雄'})
create (p)-[r:ACTED_IN {role:'船越文夫'}]->(m)
match (p:Person {name:'中山忍'}),(m:Movie {title:'精武英雄'})
create (p)-[r:ACTED_IN {role:'山田光子'}]->(m)
match (p:Person {name:'钱小豪'}),(m:Movie {title:'精武英雄'})
create (p)-[r:ACTED_IN {role:'霍廷恩'}]->(m)
match (p:Person {name:'李连杰'}),(m:Movie {title:'太极张三丰'})
create (p)-[r:ACTED_IN {role:'君宝'}]->(m)
match (p:Person {name:'钱小豪'}),(m:Movie {title:'太极张三丰'})
create (p)-[r:ACTED_IN {role:'天宝'}]->(m)
match (p:Person {name:'杨紫琼'}),(m:Movie {title:'太极张三丰'})
create (p)-[r:ACTED_IN {role:'秋雪'}]->(m)

##创建导演和电影的关系
match (p:Person {name:'陈嘉上'}),(m:Movie {title:'精武英雄'})
create (p)-[r:DIRECTED]->(m)
#使用merge防止创建重复关系
match (p:Person {name:'陈嘉上'}),(m:Movie {title:'精武英雄'})
merge (p)-[r:DIRECTED]->(m)

##查询参演电影的演员
match (p:Person)-[r:ACTED_IN]->(m:Movie {title:'精武英雄'})
return p,r,m
skip 1 limit 1


##查询2个演员共同参演的电影
match (p1:Person {name:'李连杰'})-[r1:ACTED_IN]->(m:Movie)<-[r2:ACTED_IN]-(p2:Person {name:'钱小豪'})
return p1,r1,m,r2,p2

##查询演员合作过的演员
match (p:Person {name: '李连杰'})-[r:ACTED_IN]->(m:Movie) <-[:ACTED_IN]-(coActor:Person)
return m,coActor

##查杨紫琼和周比利的最短路径
match p=shortestPath( (p1:Person {name:'周比利'})-[*]-(p2:Person {name:'杨紫琼'}) )
return p
match p=shortestPath( (p1:Person {name:'周比利'})-[*1..6]-(p2:Person {name:'杨紫琼'}) )
return nodes(p),relationships(p)

##创建演员和演员的关注关系
match (p1:Person {name:'李连杰'}),(p2:Person {name:'中山忍'})
create (p1)-[r:FOLLOW]->(p2)
match (p1:Person {name:'中山忍'}),(p2:Person {name:'李连杰'})
create (p1)-[r:FOLLOW]->(p2)
match (p1:Person {name:'周比利'}),(p2:Person {name:'中山忍'})
create (p1)-[r:FOLLOW]->(p2)

##查询2个演员是否互相关注
match (p1:Person {name:'李连杰'})-[r:FOLLOW]-(p2:Person {name:'中山忍'})
return p1,r,p2

##查询2个演员的共同关注
match (p1:Person {name:'李连杰'})-[:FOLLOW]->(p:Person)<-[:FOLLOW]-(p2:Person {name:'周比利'})
return p

##创建演员和演员的关注关系
match (p1:Person {name:'李连杰'}),(p2:Person {name:'中山忍'})
create (p1)-[r:FRIEND]->(p2)

##创建演员和演员的关注关系
match (p1:Person {name:'李连杰'})-[r:FRIEND]-(p2:Person {name:'中山忍'})
return r

##使用merge能避免重复创建相同的节点或者关系
match (p:Person {name:'李连杰'}),(m:Movie {title:'精武英雄'})
merge (p)-[r:ACTED_IN {role:'陈真'}]->(m)

##节点间多关系查询
match (p:Person {name:'李连杰'})-[r:FOLLOW|FRIEND]-(p2:Person {name:'中山忍'})
return r

##数据导入
LOAD CSV WITH HEADERS FROM "file:///northwind/products.csv" AS row
CREATE (n:Product)
SET n = row,
n.unitPrice = toFloat(row.unitPrice),
n.unitsInStock = toInteger(row.unitsInStock), n.unitsOnOrder = toInteger(row.unitsOnOrder),
n.reorderLevel = toInteger(row.reorderLevel), n.discontinued = (row.discontinued <> "0")

###执行计划
##创建节点索引
CREATE INDEX for (n:Person)
on(n.name)

##创建关系索引
CREATE INDEX for FOR ()-[r:FOLLOW]-()
on(r.name)

##查询人物节点
explain
match (p:Person {name:'李连杰'})
return p


#####接口参数
##创建演员
{
    "name": "仓田保昭",
    "birthday": "1991-01-02"
}

